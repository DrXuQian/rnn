#!/bin/sh

display_usage() {
    cat << EOS
rnn-generate - a program to display output of recurrent neural networks.

rnn-generate is called with the following parameters:

    rnn-generate [-s seed] [-n steps] [-i index] rnn-file
    rnn-generate [-h]

Available options are:

-s seed
    \`seed' is the seed for the initialization of random number generator, which specifies a starting point for the random number sequence, and provides for restarting at the same point. If this option is omitted, current system time is used.

-n steps
    Number of steps to generate output of a network. Default is 1000.

-i index
    Index of an initial state corresponding to a training example. Default is -1 (use a random initial state).

Program execution:

First, rnn-generate reads the rnn-file (ex: rnn.dat) generated by rnn-learn in order to setup model parameters. Next, it displays output of a network up to given steps with respect to the initial state corresponding to given index.
EOS
}


seed=0
steps=1000
index=-1

while getopts s:n:i:h OPT
do
    case $OPT in
        s ) seed=${OPTARG};;
        n ) steps=${OPTARG};;
        i ) index=${OPTARG};;
        h ) display_usage
            exit 0;;
        \?) exit 1;;
    esac
done

shift `expr $OPTIND - 1`

file=$1

if [ ! -n "$file" ]; then
    echo "Usage: $0 [-s seed] [-n steps] [-i index] rnn-file"
    echo "Try \`$0 -h' for more information."
    exit 1
elif [ ! -f "$file" ]; then
    echo "No such file or directory: $file"
    exit 1
fi

python `dirname $0`/rnn_runner.py $seed $steps $index $file
